name: Build and Release

on:
  push:
    branches:
      - main  # Sostituisci con il ramo desiderato

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Build with Maven
        run: mvn clean package

      - name: Find JAR file
        id: find_jar
        run: |
          JAR_FILE=$(find ./target -maxdepth 1 -name "*.jar" ! -name "original*.jar" | head -n 1)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      - name: Get commit hash
        id: commit_hash
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-plugin-jar
          path: ${{ env.JAR_FILE }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: List existing releases
        id: list_releases
        run: |
          curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases?per_page=100" > releases.json

      - name: Delete previous pre-releases
        id: delete_pre_releases
        run: |
          cat releases.json | jq '.[] | select(.prerelease == true) | .id' | while read -r id; do
            curl -X DELETE -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/$id"
          done

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }} - ${{ steps.commit_hash.outputs.COMMIT_HASH }}
          draft: false
          prerelease: true

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_FILE }}
          asset_name: instantkick-${{ steps.commit_hash.outputs.COMMIT_HASH }}.jar
          asset_content_type: application/java-archive
